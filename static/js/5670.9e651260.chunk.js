"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[5670],{95670:function(e,r,n){n.r(r),r.default={components:{3:function(){function e(r){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(r)}var r,t=function(r,n){if(!n&&r&&r.__esModule)return r;if(null===r||"object"!==e(r)&&"function"!==typeof r)return{default:r};var t=a(n);if(t&&t.has(r))return t.get(r);var o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in r)if("default"!==l&&Object.prototype.hasOwnProperty.call(r,l)){var u=i?Object.getOwnPropertyDescriptor(r,l):null;u&&(u.get||u.set)?Object.defineProperty(o,l,u):o[l]=r[l]}o.default=r,t&&t.set(r,o);return o}(n(83528)),o=(r=n(50559))&&r.__esModule?r:{default:r};function a(e){if("function"!==typeof WeakMap)return null;var r=new WeakMap,n=new WeakMap;return(a=function(e){return e?n:r})(e)}function i(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var t,o,a,i,l=[],u=!0,f=!1;try{if(a=(n=n.call(e)).next,0===r){if(Object(n)!==n)return;u=!1}else for(;!(u=(t=a.call(n)).done)&&(l.push(t.value),l.length!==r);u=!0);}catch(c){f=!0,o=c}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(f)throw o}}return l}}(e,r)||function(e,r){if(!e)return;if("string"===typeof e)return l(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return l(e,r)}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,r){(null==r||r>e.length)&&(r=e.length);for(var n=0,t=new Array(r);n<r;n++)t[n]=e[n];return t}var u=o.default.Original,f=o.default.Modified,c="one\ntwo\nthree\nfour\nfive";return function(){var e=i((0,t.useState)(""),2),r=e[0],n=e[1],a=i((0,t.useState)(""),2),l=a[0],d=a[1];return t.default.createElement("div",null,t.default.createElement(o.default,null,t.default.createElement(u,{onChange:function(e){n(e)},value:c}),t.default.createElement(f,{onChange:function(e){d(e)},value:c.replace(/t/g,"T")+"Six"})),t.default.createElement("div",{style:{display:"flex"}},t.default.createElement("pre",{style:{flex:1}},r," "),t.default.createElement("pre",{style:{backgroundColor:"#fff",flex:1}},l," ")))}}()},data:{3:{name:3,meta:{},code:'"use strict";\n\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nvar _react = _interopRequireWildcard(require("react"));\nvar _reactCodemirrorMerge = _interopRequireDefault(require("react-codemirror-merge"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar Original = _reactCodemirrorMerge["default"].Original;\nvar Modified = _reactCodemirrorMerge["default"].Modified;\nvar doc = "one\\ntwo\\nthree\\nfour\\nfive";\nreturn function App() {\n  var _useState = (0, _react.useState)(\'\'),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = (0, _react.useState)(\'\'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    valueModified = _useState4[0],\n    setValueModified = _useState4[1];\n  return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_reactCodemirrorMerge["default"], null, /*#__PURE__*/_react["default"].createElement(Original, {\n    onChange: function onChange(value) {\n      setValue(value);\n    },\n    value: doc\n  }), /*#__PURE__*/_react["default"].createElement(Modified, {\n    onChange: function onChange(value) {\n      setValueModified(value);\n    },\n    value: doc.replace(/t/g, \'T\') + \'Six\'\n  })), /*#__PURE__*/_react["default"].createElement("div", {\n    style: {\n      display: \'flex\'\n    }\n  }, /*#__PURE__*/_react["default"].createElement("pre", {\n    style: {\n      flex: 1\n    }\n  }, value, " "), /*#__PURE__*/_react["default"].createElement("pre", {\n    style: {\n      backgroundColor: \'#fff\',\n      flex: 1\n    }\n  }, valueModified, " ")));\n};',language:"jsx",value:"import React, { useState } from 'react';\nimport CodeMirrorMerge from 'react-codemirror-merge';\n\nconst Original = CodeMirrorMerge.Original;\nconst Modified = CodeMirrorMerge.Modified;\nlet doc = `one\ntwo\nthree\nfour\nfive`;\n\nexport default function App() {\n  const [value, setValue] = useState('');\n  const [valueModified, setValueModified] = useState('');\n  return (\n    <div>\n      <CodeMirrorMerge>\n        <Original\n          onChange={(value) => {\n            setValue(value);\n          }}\n          value={doc}\n        />\n        <Modified\n          onChange={(value) => {\n            setValueModified(value);\n          }}\n          value={doc.replace(/t/g, 'T') + 'Six'}\n        />\n      </CodeMirrorMerge>\n      <div style={{ display: 'flex' }}>\n        <pre style={{ flex: 1 }}>{value} </pre>\n        <pre style={{ backgroundColor: '#fff', flex: 1 }}>{valueModified} </pre>\n      </div>\n    </div>\n  );\n}"}},source:"# onChange Example\n\n```jsx mdx:preview\nimport React, { useState } from 'react';\nimport CodeMirrorMerge from 'react-codemirror-merge';\n\nconst Original = CodeMirrorMerge.Original;\nconst Modified = CodeMirrorMerge.Modified;\nlet doc = `one\ntwo\nthree\nfour\nfive`;\n\nexport default function App() {\n  const [value, setValue] = useState('');\n  const [valueModified, setValueModified] = useState('');\n  return (\n    <div>\n      <CodeMirrorMerge>\n        <Original\n          onChange={(value) => {\n            setValue(value);\n          }}\n          value={doc}\n        />\n        <Modified\n          onChange={(value) => {\n            setValueModified(value);\n          }}\n          value={doc.replace(/t/g, 'T') + 'Six'}\n        />\n      </CodeMirrorMerge>\n      <div style={{ display: 'flex' }}>\n        <pre style={{ flex: 1 }}>{value} </pre>\n        <pre style={{ backgroundColor: '#fff', flex: 1 }}>{valueModified} </pre>\n      </div>\n    </div>\n  );\n}\n```\n"}}}]);
//# sourceMappingURL=5670.9e651260.chunk.js.map